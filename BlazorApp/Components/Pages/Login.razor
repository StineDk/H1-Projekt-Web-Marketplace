@using Service
@inject AuthenticationService AuthenticationService
@inject IJSRuntime JSRuntime
@page "/login"
<PageTitle>Gamers lounge: Login</PageTitle>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    Login
                </div>
                <div class="card-body">
                    @*Felter til at indtaste brugernavn og adgangskode*@
                    <form>
                        <div class="form-group">
                            <label for="username" class="label">Username</label>
                            <input type="text" class="form-control" id="username" placeholder="Input username" @bind="username" required>
                        </div>
                        <div class="form-group">
                            <label for="password" class="label">Password</label>
                            <input type="password" class="form-control" id="password" placeholder="Input Password" @bind="password" required>
                        </div>
                        <button type="submit" class="btn btn-dark" @onclick="HandleLogin" @onclick:preventDefault>Log ind</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    //Gemmer brugerens indtastede brugernavn og adgangskode
    private string username;
    private string password;

    //Parameter til at hente userID
    [Parameter]
    public int userID { get; set; }

    //Liste over alle bruger til at tjekke om oplysningerne stemmer overens
    public List<User> allusers = new List<User>();

    protected override void OnInitialized()
    {
        //henter alle brugere fra databasen og gemmer den i listen allusers
        allusers = DB.GetAllUser();
    }

    //Metode til at håndtere login
    private async void HandleLogin()
    {
        //Find den bruger der matcher med Brugernavn og adgangkoden som er indtastet
        User user = allusers.FirstOrDefault(u => u.name == username && u.password == password);

        //hvis der bliver fundet en bruger
        if (user != null)
        {
            //Bruger metoden fra AuthenticationService til at logge brugeren ind og gemmer det sammetid i cookies
            AuthenticationService.Login(user);
            //Navigere til profil siden for brugeren
            NavigationManager.NavigateTo($"/profilepage/{user.userID}");
            
        }
        else
        {
            //Browser alert det fortæller at brugen ikke findes
            await JSRuntime.InvokeVoidAsync("alert", "The User could not be found, Try again.");
            Console.WriteLine("Brugeren Findes ikke");
        }
    }
}